{"version":3,"sources":["pages/Menu.tsx","pages/Lobby.tsx","pages/Game.tsx","routes.tsx","services/network.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Menu","Lobby","Game","Routes","props","exact","path","component","console","log","socket","Socket","params","gzp_id","connect","channel","App","useEffect","join","receive","msg","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAUeA,EARF,WACT,OACI,wCCMOC,EARD,WACV,OACI,yCCMOC,EARF,WACT,OACI,wCCgBOC,EAZU,SAACC,GACxB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,SAASC,UAAWN,IACtC,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,QAAQC,UAAWL,U,gBCX7CM,QAAQC,IAAI,+BACZ,IAAMC,EAAiB,IAAIC,SAAO,gDAAiD,CAC/EC,OAAQ,CAAEC,OAAQ,WAEtBH,EAAOI,UAEP,IAAMC,EAAmBL,EAAOK,QAAQ,YAAa,ICatCC,EAfO,WAQpB,OANAC,qBAAU,WACRF,EAAQG,OAAOC,QAAQ,MAAM,SAACC,GAC5BZ,QAAQC,IAAI,WAAYW,QAEzB,IAGD,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCHSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1fc2577c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Menu = () => {\n    return (\n        <div>\n            Menu\n        </div>\n    );\n};\n\nexport default Menu;","import React from 'react';\n\nconst Lobby = () => {\n    return (\n        <div>\n            Lobby\n        </div>\n    );\n};\n\nexport default Lobby;","import React from 'react';\n\nconst Game = () => {\n    return (\n        <div>\n            Game\n        </div>\n    );\n};\n\nexport default Game;","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Menu from \"./pages/Menu\"\nimport Lobby from \"./pages/Lobby\";\nimport Game from \"./pages/Game\";\n\n\nconst Routes: React.FC = (props) => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Menu} ></Route>\n        <Route exact path=\"/lobby\" component={Lobby} ></Route>\n        <Route exact path=\"/game\" component={Game} ></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Routes;\n","import { Channel, Socket } from \"phoenix\";\n\n// const socket: Socket = new Socket(\"ws://localhost:4000/socket\", {\nconsole.log(\"connecting to btt server...\")\nconst socket: Socket = new Socket(\"wss://still-plains-97814.herokuapp.com/socket\", {\n    params: { gzp_id: \"gzp-0\" },\n});\nsocket.connect();\n\nconst channel: Channel = socket.channel(\"room:home\", {});\n\nexport { socket, channel }","import React, { useEffect } from 'react';\nimport Routes from \"./routes\";\n\nimport './App.css';\n\nimport { channel } from './services/network';\n\nconst App: React.FC = () =>  {\n\n  useEffect(() => {\n    channel.join().receive(\"ok\", (msg) => {\n      console.log(\"DSB: msg\", msg);\n    });\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}